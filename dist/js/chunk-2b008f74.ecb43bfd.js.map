{"version":3,"sources":["webpack:///./src/views/Reports/ReportPage2_bk.vue?dd92","webpack:///./src/views/Reports/ReportPage2_bk.vue?f628","webpack:///src/views/Reports/ReportPage2_bk.vue","webpack:///./src/views/Reports/ReportPage2_bk.vue?0b88","webpack:///./src/views/Reports/ReportPage2_bk.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","TitleHeader","staticStyle","attrs","_l","dataRow","idx","key","data","index","RowNo","isColumn","ColumnType","Label","_e","response","parseInt","position","cLabel","cLabelSize","cValue","cPageLevel","cTabIndex","cVisible","cClass","dataLookUp","LookUpCd","ColumnDB","LookUpDB","InitialWhere","LookUpInitialWhere2","ParamWhere","OrderBy","LookUpSortField","SourceField","sourceField","DisplayLookUp","ParamView","ParamViewLookUp2","cValidate","isRequired","cName","ParamName","cKey","cOrder","TabOrder","cTriggered","cDefault","cProtect","isDisabled","isVisible","cAsync","cFilter","cParentForm","cStatic","cOption","cDisplayColumn","DisplayColumn","cHideRowColumnCSS","cRowDisable","models","on","$event","OnLookUpChange","model","value","callback","$$v","$set","expression","ref","refInFor","MaxLength","cType","cDecimal","cLastLabel","cStyle","cIsAlwaysShow","OnInputTextChange","cFormat","split","trim","OnDateRangeFrom","OnDateRangeTo","OnDateRangeFromInput","OnInputDateChange","toArray","setValue","cId","cRadioOptions","cRadioDefaultOption","cShowClearButton","OnInputRadioChange","cOptions","OnCheckBoxChange","M_GenerateReport","directives","name","rawName","modifiers","reportVisible","dataUrl","staticRenderFns","PageLevel","TabIndex","reportParam","onChangeModels","RowData","watch","$emit","methods","onChangeField","x","indexField","SetColumnValue","$forceUpdate","paramName","includes","OnChangeTriggerField","length","M_ClearForm","console","log","scopeForm","$validator","_base","validateAll","then","result","params","reportPath","paramToGetPath","OptionSeq","ress","Data","cond","forEach","state1","state2","state3","strParam","ParameterFunction","param","p","parm","dynamicData","ReportPath","yesno","isDT","orderbyy","exst","varOrderBy","match","RegExp","varParam","vob","slice","pN","idxPN","val","Id","loadData","arrString","string","str","a","push","JSON","parse","GetPageInfo","Oid","getOptionSeq","UserId","getDataUser","user_id","SubPortfolioCd","subportfolio_cd","postEncode","getPageInfoByOption","ReplaceParameter","isParam","replace","portfolio_cd","PortfolioName","SubPortfolioName","user_name","Address1","Address2","Address3","Address4","ZipCode","PhoneNo","FaxNo","momentDateFormatting","Date","toString","M_CheckParamView","ParamViewLookUp","pView","pView2","pv","map","DefaultValue","GetParameter","toUpperCase","fnLoadData","getUrlReportBlankPage","beforeCreate","created","beforeMount","mounted","hideSideBarMenu","$store","commit","beforeUpdate","updated","beforeDestroy","destroyed","component"],"mappings":"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","file":"js/chunk-2b008f74.ecb43bfd.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPage2_bk.vue?vue&type=style&index=0&id=616d701e&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPage2_bk.vue?vue&type=style&index=0&id=616d701e&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"height--full\"},[_c('div',{staticClass:\"header--content\"},[_c('div',{staticClass:\"header--content__breadcrumbs\"},[_vm._v(\"\\n      \"+_vm._s(_vm.TitleHeader)+\"\\n    \")])]),_c('div',{staticClass:\"content-app-form__body\",staticStyle:{\"background-color\":\"white\",\"padding-top\":\"1px !important\",\"margin-left\":\"15px\",\"margin-right\":\"15px\",\"height\":\"95%\",\"overflow-y\":\"auto\",\"overflow-x\":\"hidden\",\"padding-bottom\":\"1%\"}},[_c('b-collapse',{attrs:{\"id\":\"collapse1\",\"visible\":true}},[_c('b-row',{staticStyle:{\"margin-left\":\"20px\",\"margin-top\":\"20px\"}},[_c('b-col',{attrs:{\"md\":\"12\",\"id\":\"col-left\"}},[_c('b-form',{attrs:{\"data-vv-scope\":'FormScope_' + 1 + '_' + 1,\"data-vv-value-path\":'FormScope_' + 1 + '_' + 1}},[_vm._l((_vm.RowData),function(dataRow,idx){return _c('b-row',{key:idx},[_vm._l((_vm.response),function(data,index){return [(dataRow == data.RowNo)?[(data.isColumn == 'True')?[(data.ColumnType=='Tag')?[_c('div',{key:index,staticClass:\"div-collapse\"},[_c('span',{staticClass:\"master-span-form\"},[_vm._v(\"\\n                        \"+_vm._s(data.Label)+\"\\n                      \")])])]:_vm._e(),(data.ColumnType=='Label')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('span',[_c('b-row',[_c('b-col',{attrs:{\"md\":\"4\",\"offset\":\"4\"}},[_c('ABSLabelOnly',{attrs:{\"prop\":{cLabel: data.Label,\n                              cLabelSize: 4,\n                              cValue: '',\n                              cPageLevel: 1,\n                              cTabIndex: 1,\n                              cVisible: true,\n                              cClass: ''}}})],1)],1)],1)])]:_vm._e(),(data.ColumnType=='LookUp')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSInputSelectList',{attrs:{\"prop\":{\n                            dataLookUp: {\n                              LookUpCd: data.LookUpCd,\n                              ColumnDB: data.LookUpDB,\n                              InitialWhere: data.LookUpInitialWhere2,\n                              ParamWhere: '',\n                              OrderBy: data.LookUpSortField,\n                              SourceField: data.sourceField,\n                              DisplayLookUp: data.DisplayLookUp,\n                              ParamView: data.ParamViewLookUp2\n                            },\n                            cValidate : (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\n                            cName: data.ParamName,\n                            cLabel: data.Label,\n                            cKey: false,\n                            cLabelSize: '4',\n                            cOrder: data.TabOrder,\n                            cTriggered: false,\n                            cDefault: '',\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\n                            cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\n                            cAsync: false,\n                            cFilter: false,\n                            cPageLevel: 1,\n                            cTabIndex: 1,\n                            cParentForm: 'FormScope_' + 1 + '_' + 1,\n                            cStatic: false,\n                            cOption: [],\n                            cDisplayColumn: data.DisplayColumn,\n                            cHideRowColumnCSS: false,\n                            cRowDisable: []\n                        },\"label\":_vm.models[data.ParamName+'Label']},on:{\"change\":function($event){return _vm.OnLookUpChange(_vm.models[data.ParamName], index, data.ParamName)}},model:{value:(_vm.models[data.ParamName]),callback:function ($$v) {_vm.$set(_vm.models, data.ParamName, $$v)},expression:\"models[data.ParamName]\"}})],1)]:_vm._e(),(data.ColumnType=='String')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSinputTextVuex',{ref:'ref_'+data.ParamName,refInFor:true,attrs:{\"prop\":{\n                          cValidate: (data.MaxLength && data.MaxLength != '' && data.MaxLength != 0 ? 'max:' + data.MaxLength : '') + (data.isRequired && data.isRequired == 'True' ? '|required' : ''),\n                          cName: data.ParamName,\n                          cLabel: data.Label,\n                          cLabelSize: '4',\n                          cOrder: data.TabOrder,\n                          cKey: false,\n                          cType: 'text',\n                          cDefault: '',\n                          cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\n                          cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\n                          cPageLevel: '1',\n                          cTabIndex: '1',\n                          cParentForm: 'FormScope_' + 1 + '_' + 1,\n                          cDecimal: '0',\n                          cLastLabel: '',\n                          cStyle: '',\n                          cIsAlwaysShow: false\n                        }},on:{\"input\":function($event){return _vm.OnInputTextChange(_vm.models[data.ParamName], data.ParamName)}},model:{value:(_vm.models[data.ParamName]),callback:function ($$v) {_vm.$set(_vm.models, data.ParamName, $$v)},expression:\"models[data.ParamName]\"}})],1)]:_vm._e(),(data.ColumnType=='Numeric')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSinputTextVuex',{ref:'ref_'+data.ParamName,refInFor:true,attrs:{\"prop\":{\n                          cValidate: (data.MaxLength && data.MaxLength != '' && data.MaxLength != 0 ? 'max:' + data.MaxLength : '') + (data.isRequired && data.isRequired == 'True' ? '|required' : ''),\n                          cName: data.ParamName,\n                          cLabel: data.Label,\n                          cLabelSize: '4',\n                          cOrder: data.TabOrder,\n                          cKey: false,\n                          cType: 'numeric',\n                          cDefault: '',\n                          cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\n                          cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\n                          cPageLevel: '1',\n                          cTabIndex: '1',\n                          cParentForm: 'FormScope_' + 1 + '_' + 1,\n                          cDecimal: '0',\n                          cLastLabel: '',\n                          cStyle: '',\n                          cIsAlwaysShow: false\n                        }},on:{\"input\":function($event){return _vm.OnInputTextChange(_vm.models[data.ParamName], data.ParamName)}},model:{value:(_vm.models[data.ParamName]),callback:function ($$v) {_vm.$set(_vm.models, data.ParamName, $$v)},expression:\"models[data.ParamName]\"}})],1)]:_vm._e(),(data.ColumnType=='Decimal')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSinputTextVuex',{ref:'ref_'+data.ParamName,refInFor:true,attrs:{\"prop\":{\n                          cValidate: (data.MaxLength && data.MaxLength != '' && data.MaxLength != 0 ? 'max:' + data.MaxLength : '') + (data.isRequired && data.isRequired == 'True' ? '|required' : ''),\n                          cName: data.ParamName,\n                          cLabel: data.Label,\n                          cLabelSize: '4',\n                          cOrder: data.TabOrder,\n                          cKey: false,\n                          cType: 'decimal',\n                          cDefault: '',\n                          cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\n                          cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\n                          cPageLevel: '1',\n                          cTabIndex: '1',\n                          cParentForm: 'FormScope_' + 1 + '_' + 1,\n                          cDecimal: '2',\n                          cLastLabel: '',\n                          cStyle: '',\n                          cIsAlwaysShow: false\n                        }},on:{\"input\":function($event){return _vm.OnInputTextChange(_vm.models[data.ParamName], data.ParamName)}},model:{value:(_vm.models[data.ParamName]),callback:function ($$v) {_vm.$set(_vm.models, data.ParamName, $$v)},expression:\"models[data.ParamName]\"}})],1)]:_vm._e(),(data.ColumnType=='DateRange')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSinputDateRangeVuex',{attrs:{\"prop\":{\n                          cValidate: (data.MaxLength && data.MaxLength != '' && data.MaxLength != 0 ? 'max:' + data.MaxLength : '') + (data.isRequired && data.isRequired == 'True' ? '|required' : ''),\n                          cName: data.ParamName,\n                          cLabel: data.Label,\n                          cLabelSize: '4',\n                          cOrder: data.TabOrder,\n                          cKey: false,\n                          cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\n                          cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\n                          cFormat: 'dd/MM/yyyy',\n                          cPageLevel: 1,\n                          cTabIndex: 1,\n                          cParentForm: 'FormScope_' + 1 + '_' + 1\n                        },\"valueFrom\":_vm.models[data.ParamName.split(',')[0].trim()],\"valueTo\":_vm.models[data.ParamName.split(',')[1].trim()]},on:{\"from\":_vm.OnDateRangeFrom,\"to\":_vm.OnDateRangeTo,\"input\":_vm.OnDateRangeFromInput}})],1)]:_vm._e(),(data.ColumnType=='DateTime')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSinputDateVuex',{attrs:{\"prop\":{\n                          cValidate : (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\n                          cName: data.ParamName,\n                          cLabel: data.Label,\n                          cLabelSize: 4,\n                          cOrder: data.TabOrder,\n                          cKey: false,\n                          cVisible:  true,\n                          cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\n                          cFormat: 'dd/MM/yyyy',\n                          cPageLevel: 1,\n                          cTabIndex: 1,\n                          cParentForm: 'FormScope_' + 1 + '_' + 1\n                        }},on:{\"input\":function($event){return _vm.OnInputDateChange(_vm.models[data.ParamName], data.ParamName)}},model:{value:(_vm.models[data.ParamName]),callback:function ($$v) {_vm.$set(_vm.models, data.ParamName, $$v)},expression:\"models[data.ParamName]\"}})],1)]:_vm._e(),(data.ColumnType=='Dropdown')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSInputSelect2',{attrs:{\"prop\":{\n                          dataLookUp: null,\n                          cValidate : (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\n                          cName: data.ParamName,\n                          cLabel: data.Label,\n                          cKey: false,\n                          cLabelSize: '4',\n                          cOrder: data.TabOrder,\n                          cTriggered: false,\n                          cDefault: '',\n                          cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\n                          cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\n                          cAsync: false,\n                          cFilter: false,\n                          cPageLevel: 1,\n                          cTabIndex: 1,\n                          cParentForm: 'FormScope_' + 1 + '_' + 1,\n                          cStatic: true,\n                          cOption: _vm.toArray(data.setValue),\n                          cDisplayColumn: '',\n                          cHideRowColumnCSS: false,\n                          cRowDisable: []\n                        },\"label\":_vm.models[data.ParamName+'Label']},on:{\"change\":function($event){return _vm.OnLookUpChange(_vm.models[data.ParamName], index, data.ParamName)}},model:{value:(_vm.models[data.ParamName]),callback:function ($$v) {_vm.$set(_vm.models, data.ParamName, $$v)},expression:\"models[data.ParamName]\"}})],1)]:_vm._e(),(data.ColumnType=='RadioButtonList')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSinputRadioButtonVuex',{attrs:{\"prop\":{\n                          cId: data.ParamName + index + data.RowNo + data.position,\n                          cName: data.ParamName,\n                          cValidate: (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\n                          cRadioOptions: _vm.toArray(data.setValue),\n                          cLabel: data.Label,\n                          cLabelSize: '4',\n                          cOrder: data.TabOrder,\n                          cKey: false,\n                          cVisible: true,\n                          cRadioDefaultOption: '',\n                          cPageLevel: 1,\n                          cTabIndex: 1,\n                          cParentForm: 'FormScope_' + 1 + '_' + 1,\n                          cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\n                          cShowClearButton: false\n                        }},on:{\"input\":function($event){return _vm.OnInputRadioChange(_vm.models[data.ParamName], data.ParamName)}},model:{value:(_vm.models[data.ParamName]),callback:function ($$v) {_vm.$set(_vm.models, data.ParamName, $$v)},expression:\"models[data.ParamName]\"}})],1)]:_vm._e(),(data.ColumnType=='CheckBox')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSinputCheckBox',{attrs:{\"prop\":{\n                          cName: data.ParamName,\n                          cValidate: (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\n                          cOptions: _vm.toArray(data.setValue),\n                          cLabel: data.Label,\n                          cLabelSize: '4',\n                          cOrder: data.TabOrder,\n                          cKey: false,\n                          cVisible: true,\n                          cDefault: [],\n                          cPageLevel: 1,\n                          cTabIndex: 1,\n                          cParentForm: 'FormScope_' + 1 + '_' + 1,\n                          cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false)\n                        }},on:{\"input\":function($event){return _vm.OnCheckBoxChange(_vm.models[data.ParamName], data.ParamName)}},model:{value:(_vm.models[data.ParamName]),callback:function ($$v) {_vm.$set(_vm.models, data.ParamName, $$v)},expression:\"models[data.ParamName]\"}})],1)]:_vm._e()]:_vm._e()]:_vm._e()]})],2)}),_c('b-row',[_c('b-col',{staticStyle:{\"text-align\":\"center\",\"padding-top\":\"10px\",\"padding-bottom\":\"10px\"},attrs:{\"md\":\"12\"}},[_c('ABSButton',{attrs:{\"text\":\"Generate Report\",\"icon\":\"list\",\"classButton\":\"button button--refresh\",\"classIcon\":\"icon-style-1\",\"styleButton\":\"width: 200px !important;\"},on:{\"click\":_vm.M_GenerateReport}})],1)],1)],2)],1)],1)],1),_c('div',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle.collapse1\",modifiers:{\"collapse1\":true}}],staticClass:\"div-collapse\"},[_c('span',{staticClass:\"master-span\"},[_c('font-awesome-icon',{staticClass:\"icon-style-1__master\",attrs:{\"icon\":\"sort-down\"}})],1)]),_c('ABSPreviewReport',{attrs:{\"cVisible\":_vm.reportVisible,\"cSrc\":_vm.dataUrl}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"height--full\">\r\n    <div class=\"header--content\">\r\n      <div class=\"header--content__breadcrumbs\">\r\n        {{TitleHeader}}\r\n      </div>\r\n    </div>\r\n      <div class=\"content-app-form__body\" style=\"background-color: white;padding-top: 1px !important;margin-left: 15px;margin-right: 15px;height: 95%;overflow-y: auto;overflow-x: hidden;padding-bottom: 1%;\">\r\n        <b-collapse id=\"collapse1\" :visible=\"true\">\r\n        <b-row style=\"margin-left:20px;margin-top: 20px;\">\t\t\t\t\t\r\n          <b-col md=\"12\" id=\"col-left\">\r\n            <b-form :data-vv-scope=\"'FormScope_' + 1 + '_' + 1\" :data-vv-value-path=\"'FormScope_' + 1 + '_' + 1\">\r\n            <b-row v-for=\"(dataRow, idx) in RowData\" :key=\"idx\">\r\n              <template v-for=\"(data, index) in response\">\r\n                <template v-if=\"dataRow == data.RowNo\">\r\n                  <template v-if=\"data.isColumn == 'True'\">\r\n                    <template v-if=\"data.ColumnType=='Tag'\">\r\n                      <div class=\"div-collapse\" :key=\"index\">\r\n                        <span class=\"master-span-form\">\r\n                          {{data.Label}}\r\n                        </span>\r\n                      </div>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='Label'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <span>\r\n                          <b-row>\r\n                            <b-col md=\"4\" offset=\"4\">\r\n                              <ABSLabelOnly :prop=\"{cLabel: data.Label,\r\n                                cLabelSize: 4,\r\n                                cValue: '',\r\n                                cPageLevel: 1,\r\n                                cTabIndex: 1,\r\n                                cVisible: true,\r\n                                cClass: ''}\"\r\n                              />\r\n                            </b-col>\r\n                          </b-row>\r\n                        </span>\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='LookUp'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSInputSelectList @change=\"OnLookUpChange(models[data.ParamName], index, data.ParamName)\"\r\n                          :prop=\"{\r\n                              dataLookUp: {\r\n                                LookUpCd: data.LookUpCd,\r\n                                ColumnDB: data.LookUpDB,\r\n                                InitialWhere: data.LookUpInitialWhere2,\r\n                                ParamWhere: '',\r\n                                OrderBy: data.LookUpSortField,\r\n                                SourceField: data.sourceField,\r\n                                DisplayLookUp: data.DisplayLookUp,\r\n                                ParamView: data.ParamViewLookUp2\r\n                              },\r\n                              cValidate : (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\r\n                              cName: data.ParamName,\r\n                              cLabel: data.Label,\r\n                              cKey: false,\r\n                              cLabelSize: '4',\r\n                              cOrder: data.TabOrder,\r\n                              cTriggered: false,\r\n                              cDefault: '',\r\n                              cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\r\n                              cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\r\n                              cAsync: false,\r\n                              cFilter: false,\r\n                              cPageLevel: 1,\r\n                              cTabIndex: 1,\r\n                              cParentForm: 'FormScope_' + 1 + '_' + 1,\r\n                              cStatic: false,\r\n                              cOption: [],\r\n                              cDisplayColumn: data.DisplayColumn,\r\n                              cHideRowColumnCSS: false,\r\n                              cRowDisable: []\r\n                          }\"\r\n                          v-model=\"models[data.ParamName]\"\r\n                          :label=\"models[data.ParamName+'Label']\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='String'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSinputTextVuex\r\n                          :prop=\"{\r\n                            cValidate: (data.MaxLength && data.MaxLength != '' && data.MaxLength != 0 ? 'max:' + data.MaxLength : '') + (data.isRequired && data.isRequired == 'True' ? '|required' : ''),\r\n                            cName: data.ParamName,\r\n                            cLabel: data.Label,\r\n                            cLabelSize: '4',\r\n                            cOrder: data.TabOrder,\r\n                            cKey: false,\r\n                            cType: 'text',\r\n                            cDefault: '',\r\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\r\n                            cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\r\n                            cPageLevel: '1',\r\n                            cTabIndex: '1',\r\n                            cParentForm: 'FormScope_' + 1 + '_' + 1,\r\n                            cDecimal: '0',\r\n                            cLastLabel: '',\r\n                            cStyle: '',\r\n                            cIsAlwaysShow: false\r\n                          }\"\r\n                          @input=\"OnInputTextChange(models[data.ParamName], data.ParamName)\"\r\n                          v-model=\"models[data.ParamName]\"\r\n                          :ref=\"'ref_'+data.ParamName\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='Numeric'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSinputTextVuex\r\n                          :prop=\"{\r\n                            cValidate: (data.MaxLength && data.MaxLength != '' && data.MaxLength != 0 ? 'max:' + data.MaxLength : '') + (data.isRequired && data.isRequired == 'True' ? '|required' : ''),\r\n                            cName: data.ParamName,\r\n                            cLabel: data.Label,\r\n                            cLabelSize: '4',\r\n                            cOrder: data.TabOrder,\r\n                            cKey: false,\r\n                            cType: 'numeric',\r\n                            cDefault: '',\r\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\r\n                            cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\r\n                            cPageLevel: '1',\r\n                            cTabIndex: '1',\r\n                            cParentForm: 'FormScope_' + 1 + '_' + 1,\r\n                            cDecimal: '0',\r\n                            cLastLabel: '',\r\n                            cStyle: '',\r\n                            cIsAlwaysShow: false\r\n                          }\"\r\n                          @input=\"OnInputTextChange(models[data.ParamName], data.ParamName)\"\r\n                          v-model=\"models[data.ParamName]\"\r\n                          :ref=\"'ref_'+data.ParamName\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='Decimal'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSinputTextVuex\r\n                          :prop=\"{\r\n                            cValidate: (data.MaxLength && data.MaxLength != '' && data.MaxLength != 0 ? 'max:' + data.MaxLength : '') + (data.isRequired && data.isRequired == 'True' ? '|required' : ''),\r\n                            cName: data.ParamName,\r\n                            cLabel: data.Label,\r\n                            cLabelSize: '4',\r\n                            cOrder: data.TabOrder,\r\n                            cKey: false,\r\n                            cType: 'decimal',\r\n                            cDefault: '',\r\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\r\n                            cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\r\n                            cPageLevel: '1',\r\n                            cTabIndex: '1',\r\n                            cParentForm: 'FormScope_' + 1 + '_' + 1,\r\n                            cDecimal: '2',\r\n                            cLastLabel: '',\r\n                            cStyle: '',\r\n                            cIsAlwaysShow: false\r\n                          }\"\r\n                          @input=\"OnInputTextChange(models[data.ParamName], data.ParamName)\"\r\n                          v-model=\"models[data.ParamName]\"\r\n                          :ref=\"'ref_'+data.ParamName\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='DateRange'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSinputDateRangeVuex\r\n                          :prop=\"{\r\n                            cValidate: (data.MaxLength && data.MaxLength != '' && data.MaxLength != 0 ? 'max:' + data.MaxLength : '') + (data.isRequired && data.isRequired == 'True' ? '|required' : ''),\r\n                            cName: data.ParamName,\r\n                            cLabel: data.Label,\r\n                            cLabelSize: '4',\r\n                            cOrder: data.TabOrder,\r\n                            cKey: false,\r\n                            cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\r\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\r\n                            cFormat: 'dd/MM/yyyy',\r\n                            cPageLevel: 1,\r\n                            cTabIndex: 1,\r\n                            cParentForm: 'FormScope_' + 1 + '_' + 1\r\n                          }\"\r\n                          :valueFrom=\"models[data.ParamName.split(',')[0].trim()]\"\r\n                          :valueTo=\"models[data.ParamName.split(',')[1].trim()]\"\r\n                          @from=\"OnDateRangeFrom\"\r\n                          @to=\"OnDateRangeTo\"\r\n                          @input=\"OnDateRangeFromInput\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='DateTime'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSinputDateVuex\r\n                          @input=\"OnInputDateChange(models[data.ParamName], data.ParamName)\"\r\n                          :prop=\"{\r\n                            cValidate : (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\r\n                            cName: data.ParamName,\r\n                            cLabel: data.Label,\r\n                            cLabelSize: 4,\r\n                            cOrder: data.TabOrder,\r\n                            cKey: false,\r\n                            cVisible:  true,\r\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\r\n                            cFormat: 'dd/MM/yyyy',\r\n                            cPageLevel: 1,\r\n                            cTabIndex: 1,\r\n                            cParentForm: 'FormScope_' + 1 + '_' + 1\r\n                          }\"\r\n                          v-model=\"models[data.ParamName]\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='Dropdown'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSInputSelect2 @change=\"OnLookUpChange(models[data.ParamName], index, data.ParamName)\"\r\n                          :prop=\"{\r\n                            dataLookUp: null,\r\n                            cValidate : (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\r\n                            cName: data.ParamName,\r\n                            cLabel: data.Label,\r\n                            cKey: false,\r\n                            cLabelSize: '4',\r\n                            cOrder: data.TabOrder,\r\n                            cTriggered: false,\r\n                            cDefault: '',\r\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\r\n                            cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\r\n                            cAsync: false,\r\n                            cFilter: false,\r\n                            cPageLevel: 1,\r\n                            cTabIndex: 1,\r\n                            cParentForm: 'FormScope_' + 1 + '_' + 1,\r\n                            cStatic: true,\r\n                            cOption: toArray(data.setValue),\r\n                            cDisplayColumn: '',\r\n                            cHideRowColumnCSS: false,\r\n                            cRowDisable: []\r\n                          }\"\r\n                          v-model=\"models[data.ParamName]\"\r\n                          :label=\"models[data.ParamName+'Label']\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='RadioButtonList'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSinputRadioButtonVuex\r\n                          @input=\"OnInputRadioChange(models[data.ParamName], data.ParamName)\"\r\n                          :prop=\"{\r\n                            cId: data.ParamName + index + data.RowNo + data.position,\r\n                            cName: data.ParamName,\r\n                            cValidate: (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\r\n                            cRadioOptions: toArray(data.setValue),\r\n                            cLabel: data.Label,\r\n                            cLabelSize: '4',\r\n                            cOrder: data.TabOrder,\r\n                            cKey: false,\r\n                            cVisible: true,\r\n                            cRadioDefaultOption: '',\r\n                            cPageLevel: 1,\r\n                            cTabIndex: 1,\r\n                            cParentForm: 'FormScope_' + 1 + '_' + 1,\r\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\r\n                            cShowClearButton: false\r\n                          }\"\r\n                          v-model=\"models[data.ParamName]\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='CheckBox'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSinputCheckBox\r\n                          @input=\"OnCheckBoxChange(models[data.ParamName], data.ParamName)\"\r\n                          :prop=\"{\r\n                            cName: data.ParamName,\r\n                            cValidate: (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\r\n                            cOptions: toArray(data.setValue),\r\n                            cLabel: data.Label,\r\n                            cLabelSize: '4',\r\n                            cOrder: data.TabOrder,\r\n                            cKey: false,\r\n                            cVisible: true,\r\n                            cDefault: [],\r\n                            cPageLevel: 1,\r\n                            cTabIndex: 1,\r\n                            cParentForm: 'FormScope_' + 1 + '_' + 1,\r\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false)\r\n                          }\"\r\n                          v-model=\"models[data.ParamName]\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                  </template>\r\n                </template>\r\n              </template>\r\n            </b-row>\r\n            \r\n            <b-row>\r\n              <b-col md=\"12\" style=\"text-align:center;padding-top:10px;padding-bottom:10px\">\r\n                <ABSButton\r\n                  text=\"Generate Report\"\r\n                  icon=\"list\"\r\n                  classButton=\"button button--refresh\"\r\n                  classIcon=\"icon-style-1\"\r\n                  @click=\"M_GenerateReport\"\r\n                  styleButton=\"width: 200px !important;\"\r\n                />\r\n              </b-col>\r\n            </b-row>\r\n          </b-form>\r\n          </b-col>\r\n        </b-row>\r\n        </b-collapse>\r\n        <div class=\"div-collapse\" v-b-toggle.collapse1>\r\n          <span class=\"master-span\">\r\n            <!-- nput By : {{IEBy.Input}} | Edit By : {{IEBy.Edit}}--> <font-awesome-icon icon=\"sort-down\" class=\"icon-style-1__master\" />  \r\n          </span>\r\n        </div>\r\n        <!-- <b-collapse id=\"collapse1\" :visible=\"true\"> -->\r\n          <ABSPreviewReport :cVisible=\"reportVisible\" :cSrc=\"dataUrl\" />\r\n        <!-- </b-collapse> -->\r\n        <!-- <b-row>\r\n          <b-col md=\"12\" style=\"margin-left: 15px;\"> -->\r\n            <!-- <ABSPreviewReport :cVisible=\"reportVisible\" :cSrc=\"dataUrl\" /> -->\r\n          <!-- </b-col>\r\n        </b-row> -->\r\n    </div>\r\n    <!-- <ABSPreviewReport :cVisible=\"reportVisible\" :cSrc=\"dataUrl\" /> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dataUrl:'',//'https://www.google.com&rs:Command=Render&rs:ClearSession=true&rc:Toolbar=false',\r\n      // xx: 'http://192.168.6.98/ReportPams/ReportsTemplate?oid=cfcd208495d565ef66e7dff9f98764da&ParamWhere=PortfolioName:PT. Absolute Connection^SubPortfolioName:PT. Absolute Connection^SubportfolioAddress:^SubportfolioCd:001',\r\n      // field: null,\r\n      // fieldArray: [],\r\n      // html: [],\r\n      PageLevel: '',\r\n      TabIndex: '',\r\n      reportParam: null,\r\n      reportVisible: true,\r\n      TitleHeader:'',\r\n\r\n      response: [],\r\n      models: {},\r\n      onChangeModels: {},\r\n      RowData: []\r\n    }\r\n  },\r\n  watch: {\r\n    models: function(newData, oldData) {\r\n      this.$emit('input', this.models)\r\n    },\r\n    '$route.query.oid'() {\r\n        this.fnLoadData()\r\n    }\r\n  },\r\n  methods: {\r\n    OnInputTextChange(data, paramName){},\r\n    OnInputDateChange(data, paramName){},\r\n    OnInputRadioChange(data, paramName){},\r\n    OnCheckBoxChange(data, paramName){},\r\n    OnLookUpChange(data, index, paramName){\r\n      // console.log('ahoy')\r\n      // this.$nextTick(() => {\r\n        // console.log(data)\r\n        // console.log(index)\r\n        // console.log(paramName)\r\n        this.models[paramName] = data.id\r\n        this.models[paramName+'Label'] = data.label\r\n        this.onChangeModels[paramName] = data\r\n        var end = false\r\n        var paramNameToSet = ''\r\n        var hasChange = []\r\n\r\n\r\n        if (this.response[index].OnChangeTriggerField && this.response[index].OnChangeTriggerField != '') {\r\n          var onChangeField = this.response[index].OnChangeTriggerField.split(',')\r\n          // hasChange = onChangeField\r\n          if (onChangeField.length > 0) {\r\n            for (let x = 0 ; x < onChangeField.length ; x ++) {\r\n              paramNameToSet = onChangeField[x]\r\n              var indexField = this.response.map(zz => zz.ParamName).indexOf(onChangeField[x])\r\n              var idxMany = 0\r\n\r\n              if (indexField == -1) {\r\n                // console.log('yes2')\r\n                for(let idSpliter = 0; idSpliter < this.response.length; idSpliter++) {\r\n                  // if (this.response[idSpliter].ParamName.includes(onChangeField[x])) {\r\n                    // console.log('yes2')\r\n                    if (this.response[idSpliter].ColumnType == 'DateRange') {\r\n                      // console.log('yes3S')\r\n                      if (this.response[idSpliter].ParamName.split(',').includes(onChangeField[x])) {\r\n                        // console.log('yes3S-2', idSpliter)\r\n                        if (this.response[idSpliter].SetColumnValue && this.response[idSpliter].SetColumnValue != '') {\r\n                          // console.log(onChangeField[x], this.response[idSpliter].SetColumnValue)\r\n                          // console.log(data)\r\n                          this.models[onChangeField[x]] = this.momentDateFormat(data[this.response[idSpliter].SetColumnValue], 'DD/MM/YYYY')\r\n                          // this.$forceUpdate()\r\n                        }\r\n                        end = true\r\n                        break\r\n                      }\r\n                      else {\r\n                        var paramDR = this.response[idSpliter].ParamName.split(',')\r\n                        // console.log('yes3S-2X', paramDR)\r\n                        // console.log(idSpliter)\r\n                        for (let DR = 0; DR < paramDR.length; DR++) {\r\n                          // console.log(onChangeField[x])\r\n                          // console.log('yesxxxx', paramDR[DR])\r\n                          if (onChangeField[x].includes(paramDR[DR])) {\r\n                            if (this.response[idSpliter].SetColumnValue && this.response[idSpliter].SetColumnValue != '') {\r\n                              var colVal = this.response[idSpliter].SetColumnValue.split('|')[DR]\r\n                              // console.log(colVal)\r\n                              if (colVal != '') {\r\n                                var idAct = onChangeField[x].split(paramDR[DR])[1]\r\n                                var dataAct = colVal.split(',')[idAct-1]\r\n                                // console.log('yes5', idAct)\r\n                                if (dataAct != '') {\r\n                                  this.models[paramDR[DR]] = this.momentDateFormat(data[dataAct], 'DD/MM/YYYY')\r\n                                  // this.$forceUpdate()\r\n                                }\r\n                              }\r\n                            }\r\n                            end = true\r\n                            break\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    else {\r\n                      if (onChangeField[x].includes(this.response[idSpliter].ParamName)) {\r\n                        // console.log('yes3X')\r\n                        indexField = idSpliter\r\n                        idxMany = onChangeField[x].split(this.response[idSpliter].ParamName)[1]\r\n                        paramNameToSet = this.response[idSpliter].ParamName\r\n                        hasChange.push({'ParamName': paramName, 'ColumnChange': paramNameToSet})\r\n                        break\r\n                      }\r\n                    }\r\n                  // }\r\n                }\r\n\r\n                // console.log(end)\r\n                // console.log(indexField)\r\n                // console.log(idxMany)\r\n                // console.log(paramNameToSet)\r\n\r\n                // if (end) return\r\n                // if (indexField == -1) return\r\n                if (!end && indexField > -1) {\r\n                  if (this.response[indexField].SetColumnValue && this.response[indexField].SetColumnValue != '') {\r\n                    var colVal = this.response[indexField].SetColumnValue.split('|')[idxMany-1]\r\n                    // console.log('yes4',colVal)\r\n                    //Trigger Value To LookUp\r\n                    if (this.response[indexField].ColumnType == 'LookUp') {\r\n                      var ColValue = colVal.split(',')\r\n                      // console.log('yes5',ColValue)\r\n                      if (ColValue.length > 0) {\r\n                        for ( let cv = 0 ; cv < ColValue.length ; cv ++) {\r\n                          var lu = ColValue[cv].split('=')\r\n                          if (lu[0] == 'id') {\r\n                            this.models[paramNameToSet] = data[lu[1]]\r\n                          }\r\n                          else if (lu[0] == 'label') {\r\n                            this.models[paramNameToSet+'Label'] = data[lu[1]]\r\n                          }\r\n                          // this.$forceUpdate()\r\n                        }\r\n                      }\r\n                    }\r\n                    //End Trigger Value To LookUp\r\n\r\n                    //Trigger Value To Text, Date, Radio\r\n                    else {\r\n                      this.models[onChangeField[x]] = data[this.response[indexField].SetColumnValue]\r\n                      // this.$forceUpdate()\r\n                    }\r\n                    //End Trigger Value To Text, Date, Radio\r\n                  }\r\n                }\r\n              }\r\n              else {\r\n                hasChange.push({'ParamName': paramName, 'ColumnChange': onChangeField[x]})\r\n                if (this.response[indexField].SetColumnValue && this.response[indexField].SetColumnValue != '') {\r\n\r\n                  //Trigger Value To LookUp\r\n                  if (this.response[indexField].ColumnType == 'LookUp') {\r\n                    var ColValue = this.response[indexField].SetColumnValue.split(',')\r\n                    if (ColValue.length > 0) {\r\n                      for ( let cv = 0 ; cv < ColValue.length ; cv ++) {\r\n                        var lu = ColValue[cv].split('=')\r\n                        if (lu[0] == 'id') {\r\n                          this.models[onChangeField[x]] = data[lu[1]]\r\n                        }\r\n                        else if (lu[0] == 'label') {\r\n                          this.models[onChangeField[x]+'Label'] = data[lu[1]]\r\n                        }\r\n                        // this.$forceUpdate()\r\n                      }\r\n                    }\r\n                  }\r\n                  //End Trigger Value To LookUp\r\n\r\n                  //Trigger Value To Text, Date, Radio\r\n                  else {\r\n                    this.models[onChangeField[x]] = data[this.response[indexField].SetColumnValue]\r\n                    // this.$forceUpdate()\r\n                  }\r\n                  //End Trigger Value To Text, Date, Radio\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        if (this.response[index].OnChangeTriggerInitialWhere && this.response[index].OnChangeTriggerInitialWhere != '') {\r\n          // console.log('yes1')\r\n          //OnChange To Trigger Any Where Parameter\r\n\r\n          var onChangeWhere = this.response[index].OnChangeTriggerInitialWhere.split(',')\r\n          if (onChangeWhere.length > 0) {\r\n            // console.log('yes2',onChangeWhere)\r\n            for (let x = 0 ; x < onChangeWhere.length ; x ++) {\r\n              var indexFieldWhere = this.response.map(zz => zz.ParamName).indexOf(onChangeWhere[x])\r\n\r\n              if (this.response[indexFieldWhere].SetColumnWhere && this.response[indexFieldWhere].SetColumnWhere != '') {\r\n                // console.log('yes3',indexFieldWhere)\r\n                //Trigger Where To LookUp\r\n                if (this.response[indexFieldWhere].ColumnType == 'LookUp') {\r\n                  var newWhere = this.response[indexFieldWhere].LookUpInitialWhere\r\n                  var splitInitialWhere = this.response[indexFieldWhere].LookUpInitialWhere.trim().split(' ')\r\n                  var setWhere = this.response[indexFieldWhere].SetColumnWhere.trim().split(' ')\r\n                  for (let sw = 0; sw < setWhere.length; sw++) {\r\n                    // console.log(setWhere[sw])\r\n                    var cols = setWhere[sw].split('=')[0].trim()\r\n                    //check initialwhere\r\n                    for (let iw = 0; iw < splitInitialWhere.length; iw++) {\r\n                      if (splitInitialWhere[iw+1]){\r\n                        if (splitInitialWhere[iw+1].toUpperCase().includes('AND')) {\r\n                          if (splitInitialWhere[iw].split('=')[0].trim() == cols.toUpperCase()) {\r\n                            newWhere = newWhere.replace(splitInitialWhere[iw] + ' AND', '')\r\n                          }\r\n                        }\r\n                        else {\r\n                          if (splitInitialWhere[iw].split('=')[0].trim() == cols.toUpperCase()) {\r\n                            newWhere = newWhere.replace(splitInitialWhere[iw], '')\r\n                          }\r\n                        }\r\n                      }\r\n                      else {\r\n                        if (splitInitialWhere[iw-1]){\r\n                          if (splitInitialWhere[iw-1].toUpperCase().includes('AND')) {\r\n                            if (splitInitialWhere[iw].split('=')[0].trim() == cols.toUpperCase()) {\r\n                              newWhere = newWhere.replace('AND ' + splitInitialWhere[iw], '')\r\n                            }\r\n                          }\r\n                          else {\r\n                            if (splitInitialWhere[iw].split('=')[0].trim() == cols.toUpperCase()) {\r\n                              newWhere = newWhere.replace(splitInitialWhere[iw], '')\r\n                            }\r\n                          }\r\n                        }\r\n                        else {\r\n                          if (splitInitialWhere[iw].split('=')[0].trim() == cols.toUpperCase()) {\r\n                            newWhere = newWhere.replace(splitInitialWhere[iw], '')\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n\r\n                    newWhere = newWhere && newWhere != '' ? newWhere.trim() + ' AND ' : newWhere.trim()\r\n\r\n                    if (setWhere[sw].includes('^')) {\r\n                      // var forReplace = setWhere[sw].match(/(?=\\^)(.*)(?=\\^)/g)[0]\r\n                      var forReplace = setWhere[sw].match(new RegExp(/\\^(.*)\\^/))[1]\r\n                      if (forReplace && forReplace != ''){\r\n                        // forReplace = forReplace.substring(1, (forReplace.length - 1))\r\n                        // console.log(forReplace)\r\n                        if (forReplace.includes('.')) {\r\n                          //Set Where With OnChange Data\r\n                          // if (paramName == forReplace.split('.')[0]) {\r\n                            var isWhere = this.onChangeModels[forReplace.split('.')[0]][forReplace.split('.')[1]]\r\n                            // console.log(isWhere)\r\n                            if (isWhere && isWhere != '') {\r\n                              newWhere += cols + \"='\" + this.onChangeModels[forReplace.split('.')[0]][forReplace.split('.')[1]] + \"' AND \"\r\n                            }\r\n                            else {\r\n                              var idChange = hasChange.map(x => x.ColumnChange).indexOf(forReplace.split('.')[0])\r\n                              // console.log(idChange)\r\n                              if (idChange > -1) {\r\n                                newWhere += cols + \"='\" + this.onChangeModels[hasChange[idChange].ParamName][forReplace.split('.')[1]] + \"' AND \"\r\n                              }\r\n                            }\r\n                          // }\r\n                        }\r\n                        else {\r\n                          // Set Where With Model Data\r\n                          // console.log('data',data)\r\n                          newWhere += cols + \"='\" + data[forReplace] + \"' AND \"\r\n                        }\r\n                      }\r\n                    }\r\n                    else {\r\n                      newWhere += ' ' + setWhere[sw] + \" AND \"\r\n                    }\r\n\r\n                    // console.log(newWhere)\r\n\r\n                    if (sw == (setWhere.length - 1)) {\r\n                      newWhere = newWhere.substring(0, (newWhere.length - 4))\r\n                      // console.log('final',newWhere)\r\n                      this.response[indexFieldWhere].LookUpInitialWhere2 = newWhere\r\n                    }\r\n                  }\r\n\r\n                  // this.response[indexFieldWhere].LookUpInitialWhere2 = this.response[indexFieldWhere].LookUpInitialWhere + \" \" + newWhere\r\n                }\r\n                //End Trigger Where To LookUp\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        this.M_CheckParamView()\r\n\r\n      this.$forceUpdate()\r\n    },\r\n    OnDateRangeFrom(data, paramName){\r\n      // console.log(data)\r\n      // console.log(paramName)\r\n      // this.$nextTick(() => {\r\n      this.models[paramName.split(',')[0].trim()] = data\r\n      this.models[paramName.split(',')[1].trim()] = data\r\n\r\n      for(let x = 0 ; x < this.response.length ; x ++) {\r\n        if (this.response[x].ColumnType == 'DateRange' && this.response[x].ParamName.includes(paramName)) {\r\n          var index = x\r\n          if (this.response[index].OnChangeTriggerField && this.response[index].OnChangeTriggerField != '') {\r\n            var onChangeField = this.response[index].OnChangeTriggerField.split(',')\r\n\r\n            if (onChangeField.length > 0) {\r\n              for (let x = 0 ; x < onChangeField.length ; x ++) {\r\n                this.models[onChangeField[x]] = this.momentDateFormatting(data, 'DD/MM/YYYY')\r\n              }\r\n            }\r\n          }\r\n\r\n          break\r\n        }\r\n      }\r\n      // })\r\n\r\n      this.$forceUpdate()\r\n    },\r\n    OnDateRangeFromInput(data, slot) {\r\n      // console.log(slot,data)\r\n    },\r\n    OnDateRangeTo(data, paramName){\r\n      // console.log(data)\r\n      // console.log(paramName)\r\n      // this.$nextTick(() => {\r\n      this.models[paramName.split(',')[1].trim()] = data\r\n\r\n      for(let x = 0 ; x < this.response.length ; x ++) {\r\n        if (this.response[x].ColumnType == 'DateRange' && this.response[x].ParamName.includes(paramName)) {\r\n          var index = x\r\n          if (this.response[index].OnChangeTriggerField && this.response[index].OnChangeTriggerField != '') {\r\n            var onChangeField = this.response[index].OnChangeTriggerField.split(',')\r\n\r\n            if (onChangeField.length > 0) {\r\n              for (let x = 0 ; x < onChangeField.length ; x ++) {\r\n                this.models[onChangeField[x]] = this.momentDateFormatting(data, 'DD/MM/YYYY')\r\n              }\r\n            }\r\n          }\r\n\r\n          break\r\n        }\r\n      }\r\n      // })\r\n\r\n      this.$forceUpdate()\r\n    },\r\n    M_ClearForm () {\r\n    },\r\n    M_GenerateReport () {\r\n      console.log(this.models)\r\n      var scopeForm = \"FormScope_\" + 1 + \"_\" + 1\r\n\r\n      this.$validator._base.validateAll(scopeForm).then((result) => {\r\n        if (!result) return\r\n        \r\n        var params = \"\"\r\n        var reportPath = \"/\" + this.response[0].PathReport + \"/\" + this.response[0].ReportName\r\n        \r\n        var paramToGetPath = {\r\n          OptionSeq : this.getOptionSeq().OptionSeq\r\n        }\r\n\r\n        this.postEncode(this.getUrlConditionForReportPath(), paramToGetPath)\r\n        .then((ress) => {\r\n          var data;\r\n          if (ress) {\r\n            if (ress.Data.length > 0) {\r\n              var cond = ress.Data\r\n              cond.forEach((data, index) => {\r\n                var state1 = true;\r\n                var state2 = true;\r\n                var state3 = true;\r\n\r\n                if(data.OptionFunctionCd && data.OptionFunctionCd != ''){\r\n                  var strParam = data.ParameterFunction && data.ParameterFunction != '' ? data.ParameterFunction.split(',') : []\r\n                  var param = {}\r\n                  if (strParam.length > 0) {\r\n                    strParam.forEach((parm, i) => {\r\n                      var p = parm.split('=')\r\n                      param[p[0].trim()] = this.GetParameter(p[1].trim())\r\n                    })\r\n\r\n                    this.FnDynamicFunction(param)\r\n                    .then(ress => {\r\n                      if (ress) {\r\n                        if (ress.length > 0) {\r\n                          var dynamicData = ress[0]\r\n                          if (\r\n                            (dynamicData[data.ParamA] && dynamicData[data.ParamA] != '') &&\r\n                            (dynamicData[data.ValueA] && dynamicData[data.ValueA] != '')\r\n                          ){\r\n                            state1 = false\r\n                            if (this.models[dynamicData[data.ParamA]] == dynamicData[data.ValueA]) {\r\n                              state1 = true\r\n                            }\r\n                          }\r\n\r\n                          if (\r\n                            (dynamicData[data.ParamB] && dynamicData[data.ParamB] != '') &&\r\n                            (dynamicData[data.ValueB] && dynamicData[data.ValueB] != '')\r\n                          ){\r\n                            state2 = false\r\n                            if (this.models[dynamicData[data.ParamB]] == dynamicData[data.ValueB]) {\r\n                              state2 = true\r\n                            }\r\n                          }\r\n\r\n                          if (\r\n                            (dynamicData[data.ParamC] && dynamicData[data.ParamC] != '') &&\r\n                            (dynamicData[data.ValueC] && dynamicData[data.ValueC] != '')\r\n                          ){\r\n                            state3 = false\r\n                            if (this.models[dynamicData[data.ParamC]] == dynamicData[data.ValueC]) {\r\n                              state3 = true\r\n                            }\r\n                          }\r\n\r\n                          if (state1 && state2 && state3) {\r\n                            reportPath = data.ReportPath\r\n                          }\r\n                        }\r\n                      }\r\n                    })\r\n                  }\r\n                }\r\n                else {\r\n                  if (\r\n                    (data.ParamA && data.ParamA != '') &&\r\n                    (data.ValueA && data.ValueA != '')\r\n                  ){\r\n                    state1 = false\r\n                    if (this.models[data.ParamA] == data.ValueA) {\r\n                      state1 = true\r\n                    }\r\n                  }\r\n\r\n                  if (\r\n                    (data.ParamB && data.ParamB != '') &&\r\n                    (data.ValueB && data.ValueB != '')\r\n                  ){\r\n                    state2 = false\r\n                    if (this.models[data.ParamB] == data.ValueB) {\r\n                      state2 = true\r\n                    }\r\n                  }\r\n\r\n                  if (\r\n                    (data.ParamC && data.ParamC != '') &&\r\n                    (data.ValueC && data.ValueC != '')\r\n                  ){\r\n                    state3 = false\r\n                    if (this.models[data.ParamC] == data.ValueC) {\r\n                      state3 = true\r\n                    }\r\n                  }\r\n\r\n                  if (state1 && state2 && state3) {\r\n                    reportPath = data.ReportPath\r\n                  }\r\n                }\r\n              })\r\n\r\n              // data = ress.Data[0]\r\n              // if (!data.ScriptCondition || data.ScriptCondition == '') {}\r\n              // else {\r\n                // var str = data.ScriptCondition\r\n                \r\n                // if (this.response[0].CntReportPath > 1) {\r\n                //   var arrCondition = str.split('^')\r\n                //   var col = ''\r\n                //   var val = ''\r\n\r\n                //   arrCondition.forEach((data, index) => {\r\n                //     if (data.includes('else if') || data.includes('if')) {\r\n                //       var dt = data.substring(data.indexOf('(')+1, data.indexOf(')'))\r\n                //       col = dt.split('==')[0].trim()\r\n                //       val = dt.split('==')[1].trim()\r\n                //     }\r\n                //     else {\r\n                //       var condition = data.split(';')\r\n                //       if (condition.length > 0) {\r\n                //         condition.forEach((dt, index) => {\r\n                //           //saat ini hanya untuk reportpath\r\n                //           var setCol = dt.split('=')[0].trim()\r\n                //           var setVal = dt.split('=')[1].trim()\r\n                //           if (this.models[col] == val) {\r\n                //             // console.log(setCol, setVal)\r\n                //             reportPath = setVal\r\n                //           }\r\n                //         })\r\n                //       }\r\n                //     }\r\n                //   })\r\n                // }\r\n              // }\r\n            }\r\n          }\r\n\r\n          // console.log(this.response)\r\n          // console.log(this.models)\r\n\r\n          // for (let idx = 0; idx < this.response.length; idx++) {\r\n          //   if (this.response[idx].isParam == 'True') {\r\n          //     if (this.response[idx].ColumnType == 'DateRange') {\r\n          //       var name = this.response[idx].ParamName.split(',')\r\n          //       params += name[0].trim() + \":\" + this.models[name[0].trim()] + \"^\"\r\n          //       params += name[1].trim() + \":\" + this.models[name[1].trim()]\r\n          //     }\r\n          //     else {\r\n          //       params += this.response[idx].ParamName + \":\" + this.models[this.response[idx].ParamName]\r\n          //     }\r\n\r\n          //     if (idx < (this.response.length - 1)) {\r\n          //       params += \"^\"\r\n          //     }\r\n          //   }\r\n          // }\r\n          for (let idx = 0; idx < this.response.length; idx++) {\r\n            var yesno = 0\r\n            var isDT = 0\r\n            if (this.response[idx].ColumnType.toUpperCase().includes('Date')) {\r\n              isDT = 1\r\n            }\r\n\r\n            if (this.response[idx].isParam == 'True') {\r\n              yesno = 1\r\n\r\n              if (this.response[idx].DefaultValue.toUpperCase().includes('ORDER BY')) {\r\n                var orderbyy = 'ORDER BY '\r\n                var exst = this.response[idx].DefaultValue\r\n                var varOrderBy = exst.match(new RegExp(/\\{(.*)\\}/))[0].split(',')\r\n                for (let vob = 0; vob < varOrderBy.length; vob++) {\r\n                  var varParam = varOrderBy[vob].match(new RegExp(/\\{(.*)\\}/))[1]\r\n\r\n                  if (!orderbyy.includes(this.models[varParam.trim()])) {\r\n                    orderbyy += this.models[varParam.trim()] + ','\r\n                  }\r\n\r\n                  if (vob == (varOrderBy.length-1)) {\r\n                    orderbyy = orderbyy.slice(0,-1)\r\n                  }\r\n                }\r\n                \r\n                // params += yesno + \"|\" + isDT + \"|\" + this.response[idx].ParamName + \":\" + orderbyy\r\n                this.models[this.response[idx].ParamName] = orderbyy\r\n              }\r\n              else {\r\n                if (this.response[idx].DefaultValue.includes('{') && this.response[idx].DefaultValue.includes('}')){\r\n                  var pN = this.response[idx].DefaultValue.match(new RegExp(/\\{(.*)\\}/))[1]\r\n                  var idxPN = this.response.map(x => x.ParamName).indexOf(pN)\r\n                  if (this.response[idxPN].ColumnType == \"CheckBox\") {\r\n                    var val = this.response[idx].DefaultValue.split('=')[1]\r\n                    this.models[this.response[idx].ParamName] = this.models[pN].includes(val) ? 'Y' : 'N'\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            // if (this.response[idx].isParam == 'True') {\r\n              if (this.response[idx].ColumnType == 'DateRange') {\r\n                var name = this.response[idx].ParamName.split(',')\r\n                params += yesno + \"|\" + isDT  + \"|\" +  name[0].trim() + \":\" + this.models[name[0].trim()] + \"^\"\r\n                params += yesno + \"|\" + isDT  + \"|\" + name[1].trim() + \":\" + this.models[name[1].trim()] \r\n              }\r\n              else {\r\n                params += yesno + \"|\" + isDT  + \"|\" + this.response[idx].ParamName + \":\" + this.models[this.response[idx].ParamName]\r\n              }\r\n\r\n              if (idx < (this.response.length - 1)) {\r\n                params += \"^\"\r\n              }\r\n            // }\r\n          }\r\n\r\n          var param = {\r\n            OptionSeq : this.getOptionSeq().OptionSeq,\r\n            ParamWhere: params,\r\n            ReportPath: reportPath\r\n          }\r\n\r\n          this.postEncode(this.getUrlSaveParamTemp(), param)\r\n          .then((response) => {\r\n            if(response == null) return\r\n            var data = response.Data[0].Id\r\n            this.dataUrl = this.GenerateReportTemplate(this.getOptionSeq().OptionSeq, data)\r\n            console.log(this.dataUrl)\r\n            this.reportVisible = true\r\n          })\r\n        })\r\n      })\r\n    },\r\n    loadData() {\r\n        // getUrlParameterHTML\r\n        var param = {\r\n          OptionSeq: this.getOptionSeq().OptionSeq,\r\n          SubPortfolioCd: this.getDataUser().subportfolio_cd,\r\n          UserId: this.getDataUser().user_id,\r\n          // ParamWhere: \"isParam=1\"\r\n        }\r\n\r\n        this.postEncode(this.getUrlParameterHTML(), param)\r\n        .then((response) => {\r\n            if(response == null) return\r\n            this.response = response.Data\r\n            for (let a = 0; a < this.response.length; a ++) {\r\n              if (a == 0) {\r\n                this.RowData.push(this.response[a].RowNo)\r\n              }\r\n              else {\r\n                if (this.RowData.indexOf(this.response[a].RowNo) < 0) {\r\n                  this.RowData.push(this.response[a].RowNo)\r\n                }\r\n              }\r\n              \r\n              var iWhere = this.ReplaceParameter(this.response[a].LookUpInitialWhere, true)\r\n              this.response[a].LookUpInitialWhere = iWhere\r\n              this.response[a].LookUpInitialWhere2 = iWhere\r\n\r\n              this.response[a].DefaultValue = this.response[a].DefaultValue && this.response[a].DefaultValue != '' ? this.response[a].DefaultValue : ''\r\n\r\n              if (this.response[a].ColumnType == 'LookUp') {\r\n                this.models[this.response[a].ParamName.trim()] = this.ReplaceParameter(this.response[a].DefaultValue, false)\r\n                this.models[this.response[a].ParamName.trim()+'Label'] = this.ReplaceParameter(this.response[a].DefaultValue, false)\r\n\r\n                this.onChangeModels[this.response[a].ParamName.trim()] = {}\r\n\r\n                if (this.response[a].ParamViewLookUp && this.response[a].ParamViewLookUp != '') {\r\n                  var pView = this.response[a].ParamViewLookUp.trim().split(',')\r\n                  var pView2 = \"\"\r\n                  for (let pv = 0; pv < pView.length; pv ++) {\r\n                    if (pView[pv].includes('^')) {\r\n                      pView2 += this.ReplaceParameter(pView[pv], true) + ','\r\n                    }\r\n                    else if (pView[pv].includes('{') && pView[pv].includes('}')) {\r\n                      var pN = pView[pv].trim().match(new RegExp(/\\{(.*)\\}/))[1]\r\n                      var idxPN = this.response.map(x => x.ParamName).indexOf(pN)\r\n                      if (this.models[pN] && this.models[pN] != '') {\r\n                        pView2 += \"'\" + this.models[pN] + \"',\"\r\n                      }\r\n                      else {\r\n                        if (this.response[idxPN].DefaultValue && this.response[idxPN].DefaultValue != '') {\r\n                          pView2 += \"'\" + this.ReplaceParameter(this.response[idxPN].DefaultValue, false) + \"',\"\r\n                        }\r\n                        else {\r\n                          pView2 += \"'',\"\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  this.response[a].ParamViewLookUp2 = pView2.slice(0,-1)\r\n                }\r\n              }\r\n              else if (this.response[a].ColumnType == 'DateRange') {\r\n                if (this.response[a].isColumn === 'True') {\r\n                  var par = this.response[a].ParamName.split(',')\r\n                  this.models[par[0].trim()] = ''\r\n                  this.models[par[1].trim()] = ''\r\n                }\r\n              }\r\n              else if (this.response[a].ColumnType == 'Dropdown') {\r\n                this.models[this.response[a].ParamName.trim()] = this.ReplaceParameter(this.response[a].DefaultValue, false)\r\n              }\r\n              else if (this.response[a].ColumnType == 'CheckBox') {\r\n                this.models[this.response[a].ParamName.trim()] = []\r\n              }\r\n              else {\r\n                this.models[this.response[a].ParamName.trim()] = this.ReplaceParameter(this.response[a].DefaultValue, false)\r\n              }\r\n            }\r\n        })\r\n    },\r\n    toArray(string) {\r\n      var x = []\r\n      var arrString = string.split(',')\r\n      if (arrString.length > 0) {\r\n        var str = \"\"\r\n        for (let a = 0; a < arrString.length; a ++) {\r\n          if (arrString[a].includes('{')) {\r\n            str = arrString[a]\r\n          }\r\n          else if (arrString[a].includes('}')) {\r\n            str += ',' + arrString[a]\r\n            \r\n            x.push(JSON.parse(str))\r\n          }\r\n          else {\r\n            str += ',' + arrString[a]\r\n          }\r\n        }\r\n      }\r\n\r\n      return x\r\n    },\r\n    GetPageInfo(){\r\n      var param = {\r\n        Oid: this.getOptionSeq().OptionSeq,\r\n        UserId: this.getDataUser().user_id,\r\n        SubPortfolioCd: this.getDataUser().subportfolio_cd,\r\n      }\r\n\r\n      this.postEncode(this.getPageInfoByOption(), param).then(response => {\r\n        if (response == null) return\r\n\r\n          var data = response.Data[0]\r\n          this.TitleHeader = data.ModuleName + ' | ' + data.TextMenu\r\n      })\r\n    },\r\n    ReplaceParameter(string, isParam = false) {\r\n      if (string && string != '') {\r\n        if (isParam) {\r\n          string = string.replace(/\\^PortfolioCd\\^/g, \"'\" + this.getDataUser().portfolio_cd + \"'\")\r\n          string = string.replace(/\\^PortfolioName\\^/g, \"'\" + this.getDataUser().PortfolioName + \"'\")\r\n          string = string.replace(/\\^SubPortfolioCd\\^/g, \"'\" + this.getDataUser().subportfolio_cd + \"'\")\r\n          // string = string.replace(/\\^SubPortfolioName\\^/g, \"'\" + this.getDataUser().SubPortfolioName + \"'\")\r\n          string = string.replace(/\\^Name\\^/g, \"'\" + this.getDataUser().SubPortfolioName + \"'\")\r\n          string = string.replace(/\\^UserId\\^/g, \"'\" + this.getDataUser().user_id + \"'\")\r\n          string = string.replace(/\\^Username\\^/g, \"'\" + this.getDataUser().user_name + \"'\")\r\n          string = string.replace(/\\^Address1\\^/g, \"'\" + this.getDataUser().Address1 + \"'\")\r\n          string = string.replace(/\\^Address2\\^/g, \"'\" + this.getDataUser().Address2 + \"'\")\r\n          string = string.replace(/\\^Address3\\^/g, \"'\" + this.getDataUser().Address3 + \"'\")\r\n          string = string.replace(/\\^Address4\\^/g, \"'\" + this.getDataUser().Address4 + \"'\")\r\n          string = string.replace(/\\^ZipCode\\^/g, \"'\" + this.getDataUser().ZipCode + \"'\")\r\n          string = string.replace(/\\^PhoneNo\\^/g, \"'\" + this.getDataUser().PhoneNo + \"'\")\r\n          string = string.replace(/\\^FaxNo\\^/g, \"'\" + this.getDataUser().FaxNo + \"'\")\r\n          string = string.replace(/\\^Year\\^/g, \"'\" + parseInt(this.momentDateFormatting(new Date(), 'YYYY')).toString() + \"'\")\r\n          string = string.replace(/\\^Day\\^/g, \"'\" + parseInt(this.momentDateFormatting(new Date(), 'DD')).toString() + \"'\")\r\n          string = string.replace(/\\^Month\\^/g, \"'\" + parseInt(this.momentDateFormatting(new Date(), 'MM')).toString() + \"'\")\r\n          string = string.replace(/\\^Today\\^/g, \"'\" + this.momentDateFormatting(new Date(), 'YYYY-MM-DD') + \"'\")\r\n        }\r\n        else {\r\n          string = string.replace(/\\^PortfolioCd\\^/g, this.getDataUser().portfolio_cd)\r\n          string = string.replace(/\\^PortfolioName\\^/g, this.getDataUser().PortfolioName)\r\n          string = string.replace(/\\^SubPortfolioCd\\^/g, this.getDataUser().subportfolio_cd)\r\n          // string = string.replace(/\\^SubPortfolioName\\^/g, this.getDataUser().SubPortfolioName)\r\n          string = string.replace(/\\^Name\\^/g, this.getDataUser().SubPortfolioName)\r\n          string = string.replace(/\\^UserId\\^/g, this.getDataUser().user_id)\r\n          string = string.replace(/\\^Username\\^/g, this.getDataUser().user_name)\r\n          string = string.replace(/\\^Address1\\^/g, this.getDataUser().Address1)\r\n          string = string.replace(/\\^Address2\\^/g, this.getDataUser().Address2)\r\n          string = string.replace(/\\^Address3\\^/g, this.getDataUser().Address3)\r\n          string = string.replace(/\\^Address4\\^/g, this.getDataUser().Address4)\r\n          string = string.replace(/\\^ZipCode\\^/g, this.getDataUser().ZipCode)\r\n          string = string.replace(/\\^PhoneNo\\^/g, this.getDataUser().PhoneNo)\r\n          string = string.replace(/\\^FaxNo\\^/g, this.getDataUser().FaxNo)\r\n          string = string.replace(/\\^Year\\^/g, parseInt(this.momentDateFormatting(new Date(), 'YYYY')).toString())\r\n          string = string.replace(/\\^Day\\^/g, parseInt(this.momentDateFormatting(new Date(), 'DD')).toString())\r\n          string = string.replace(/\\^Month\\^/g, parseInt(this.momentDateFormatting(new Date(), 'MM')).toString())\r\n          string = string.replace(/\\^Today\\^/g, this.momentDateFormatting(new Date(), 'YYYY-MM-DD'))\r\n        }\r\n      }\r\n      else {\r\n        string = ''\r\n      }\r\n\r\n      return string\r\n    },\r\n    M_CheckParamView() {\r\n      for (let a = 0; a < this.response.length ; a++) {\r\n        if (this.response[a].ColumnType == 'LookUp') {\r\n          if (this.response[a].ParamViewLookUp && this.response[a].ParamViewLookUp != '') {\r\n            var pView = this.response[a].ParamViewLookUp.trim().split(',')\r\n            var pView2 = \"\"\r\n            for (let pv = 0; pv < pView.length; pv ++) {\r\n              if (pView[pv].includes('^')) {\r\n                pView2 += this.ReplaceParameter(pView[pv], true) + ','\r\n              }\r\n              else if (pView[pv].includes('{') && pView[pv].includes('}')) {\r\n                var pN = pView[pv].trim().match(new RegExp(/\\{(.*)\\}/))[1]\r\n                var idxPN = this.response.map(x => x.ParamName).indexOf(pN)\r\n                if (this.models[pN] && this.models[pN] != '') {\r\n                  pView2 += \"'\" + this.models[pN] + \"',\"\r\n                }\r\n                else {\r\n                  if (this.response[idxPN].DefaultValue && this.response[idxPN].DefaultValue != '') {\r\n                    pView2 += \"'\" + this.ReplaceParameter(this.response[idxPN].DefaultValue, false) + \"',\"\r\n                  }\r\n                  else {\r\n                    pView2 += \"'',\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            this.response[a].ParamViewLookUp2 = pView2.slice(0,-1)\r\n          }\r\n        }\r\n      }\r\n    },\r\n    GetParameter(string) {\r\n      if (string.toUpperCase() == '^PORTFOLIOCD^') {\r\n        return this.getDataUser().portfolio_cd\r\n      }\r\n      else if (string.toUpperCase() == '^PORTFOLIONAME^') {\r\n        return this.getDataUser().PortfolioName\r\n      }\r\n      else if (string.toUpperCase() == '^SUBPORTFOLIOCD^') {\r\n        return this.getDataUser().subportfolio_cd\r\n      }\r\n      else if (string.toUpperCase() == '^NAME^') {\r\n        return this.getDataUser().SubPortfolioName\r\n      }\r\n      else if (string.toUpperCase() == '^USERID^') {\r\n        return this.getDataUser().user_id\r\n      }\r\n      else if (string.toUpperCase() == '^USERNAME^') {\r\n        return this.getDataUser().user_name\r\n      }\r\n      else if (string.toUpperCase() == '^ADDRESS1^') {\r\n        return this.getDataUser().Address1\r\n      }\r\n      else if (string.toUpperCase() == '^ADDRESS2^') {\r\n        return this.getDataUser().Address2\r\n      }\r\n      else if (string.toUpperCase() == '^ADDRESS3^') {\r\n        return this.getDataUser().Address3\r\n      }\r\n      else if (string.toUpperCase() == '^ADDRESS4^') {\r\n        return this.getDataUser().Address4\r\n      }\r\n      else if (string.toUpperCase() == '^ZIPCODE^') {\r\n        return this.getDataUser().ZipCode\r\n      }\r\n      else if (string.toUpperCase() == '^PHONENO^') {\r\n        return this.getDataUser().PhoneNo\r\n      }\r\n      else if (string.toUpperCase() == '^FAXNO^') {\r\n        return this.getDataUser().FaxNo\r\n      }\r\n      else {\r\n        return string\r\n      }\r\n    },\r\n    fnLoadData(){\r\n      this.dataUrl = this.getUrlReportBlankPage()\r\n          // var obj = this.toArray('{ \"label\": \"Invoice No\", \"id\": \"A.DebitNo\" },{ \"label\": \"Application No\", \"id\": \"A.ApplicationNo\" }')\r\n          // console.log(obj)\r\n          this.loadData()\r\n          this.GetPageInfo()\r\n    }\r\n  },\r\n  beforeCreate: function () {\r\n    this.PageLevel = 1\r\n    this.TabIndex = 1\r\n  },\r\n  created: function() {\r\n    // console.log('aaa',this.getUrlReportBlankPage())\r\n   this.fnLoadData()\r\n  },\r\n  beforeMount: function() {\r\n  },\r\n  mounted: function() {\r\n    \r\n    this.hideSideBarMenu()\r\n    // this.doGetHtml()\r\n\r\n    this.$store.commit('setStatus', 'new')\r\n  },\r\n  beforeUpdate: function() {\r\n  },\r\n  updated: function() {\r\n  },\r\n  beforeDestroy: function() {\r\n  },\r\n  destroyed: function() {\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n  .button {\r\n    width: 200px !important;\r\n  }\r\n\r\n  #ReportViewer1 .ToolBarButtonsCell{\r\n    position: fixed !important;\r\n    width: 100% !important;\r\n  }\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPage2_bk.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPage2_bk.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ReportPage2_bk.vue?vue&type=template&id=616d701e&scoped=true&\"\nimport script from \"./ReportPage2_bk.vue?vue&type=script&lang=js&\"\nexport * from \"./ReportPage2_bk.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ReportPage2_bk.vue?vue&type=style&index=0&id=616d701e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"616d701e\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}